// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`test Text Analysis Fireshose Stream Creation 1`] = `
Object {
  "Parameters": Object {
    "AssetParameters0cd9790ade1b33fbe8d8fd63cf9be9a740a0ca1e81a5d11012dc5185e9127777ArtifactHash71AAA35E": Object {
      "Description": "Artifact hash for asset \\"0cd9790ade1b33fbe8d8fd63cf9be9a740a0ca1e81a5d11012dc5185e9127777\\"",
      "Type": "String",
    },
    "AssetParameters0cd9790ade1b33fbe8d8fd63cf9be9a740a0ca1e81a5d11012dc5185e9127777S3BucketFCAE4F5C": Object {
      "Description": "S3 bucket for asset \\"0cd9790ade1b33fbe8d8fd63cf9be9a740a0ca1e81a5d11012dc5185e9127777\\"",
      "Type": "String",
    },
    "AssetParameters0cd9790ade1b33fbe8d8fd63cf9be9a740a0ca1e81a5d11012dc5185e9127777S3VersionKey6718B76C": Object {
      "Description": "S3 key for asset version \\"0cd9790ade1b33fbe8d8fd63cf9be9a740a0ca1e81a5d11012dc5185e9127777\\"",
      "Type": "String",
    },
    "AssetParameters1338ddd5f965564c682b06e43a3d60e4d2d91802602cbd24f0a951992cfbba2dArtifactHash165A9446": Object {
      "Description": "Artifact hash for asset \\"1338ddd5f965564c682b06e43a3d60e4d2d91802602cbd24f0a951992cfbba2d\\"",
      "Type": "String",
    },
    "AssetParameters1338ddd5f965564c682b06e43a3d60e4d2d91802602cbd24f0a951992cfbba2dS3Bucket1206113D": Object {
      "Description": "S3 bucket for asset \\"1338ddd5f965564c682b06e43a3d60e4d2d91802602cbd24f0a951992cfbba2d\\"",
      "Type": "String",
    },
    "AssetParameters1338ddd5f965564c682b06e43a3d60e4d2d91802602cbd24f0a951992cfbba2dS3VersionKey9DE21620": Object {
      "Description": "S3 key for asset version \\"1338ddd5f965564c682b06e43a3d60e4d2d91802602cbd24f0a951992cfbba2d\\"",
      "Type": "String",
    },
    "AssetParameters831f82455cd501f84fa0552882fa0c00d4fc97d6146a09225d34b1a297da11d2ArtifactHashD2D3C65D": Object {
      "Description": "Artifact hash for asset \\"831f82455cd501f84fa0552882fa0c00d4fc97d6146a09225d34b1a297da11d2\\"",
      "Type": "String",
    },
    "AssetParameters831f82455cd501f84fa0552882fa0c00d4fc97d6146a09225d34b1a297da11d2S3Bucket88FA777B": Object {
      "Description": "S3 bucket for asset \\"831f82455cd501f84fa0552882fa0c00d4fc97d6146a09225d34b1a297da11d2\\"",
      "Type": "String",
    },
    "AssetParameters831f82455cd501f84fa0552882fa0c00d4fc97d6146a09225d34b1a297da11d2S3VersionKeyB1F903A3": Object {
      "Description": "S3 key for asset version \\"831f82455cd501f84fa0552882fa0c00d4fc97d6146a09225d34b1a297da11d2\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "AccessLogD598EBE9": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AccessControl": "LogDeliveryWrite",
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "EventBus7B8748AA": Object {
      "Properties": Object {
        "Name": "EventBus",
      },
      "Type": "AWS::Events::EventBus",
    },
    "RawBucket0C3EE094": Object {
      "DeletionPolicy": "Retain",
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "TestTopicOrchestrationCheckStatusLambdaFunctionA7FE15A7": Object {
      "DependsOn": Array [
        "TestTopicOrchestrationCheckStatusLambdaFunctionServiceRoleDefaultPolicy40B1AC57",
        "TestTopicOrchestrationCheckStatusLambdaFunctionServiceRoleFC3D008E",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with more tighter permissions.",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters1338ddd5f965564c682b06e43a3d60e4d2d91802602cbd24f0a951992cfbba2dS3Bucket1206113D",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters1338ddd5f965564c682b06e43a3d60e4d2d91802602cbd24f0a951992cfbba2dS3VersionKey9DE21620",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters1338ddd5f965564c682b06e43a3d60e4d2d91802602cbd24f0a951992cfbba2dS3VersionKey9DE21620",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "TestTopicOrchestrationCheckStatusLambdaFunctionServiceRoleFC3D008E",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "TestTopicOrchestrationCheckStatusLambdaFunctionServiceRoleDefaultPolicy40B1AC57": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray.",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TestTopicOrchestrationCheckStatusLambdaFunctionServiceRoleDefaultPolicy40B1AC57",
        "Roles": Array [
          Object {
            "Ref": "TestTopicOrchestrationCheckStatusLambdaFunctionServiceRoleFC3D008E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TestTopicOrchestrationCheckStatusLambdaFunctionServiceRoleFC3D008E": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "TestTopicOrchestrationLambdaComprehendPassPolicy21453497": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "iam:GetRole",
                "iam:PassRole",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "TestTopicOrchestrationTopicAnalysisRoleA05A37B7",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TestTopicOrchestrationLambdaComprehendPassPolicy21453497",
        "Roles": Array [
          Object {
            "Ref": "TestTopicOrchestrationSubmitTopicLambdaFunctionServiceRole9B98F733",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TestTopicOrchestrationLambdaDescribeJobPolicy08843BA7": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "The * resource allows lambda function to access Amazon Comprehend services for Topic Detection. The Comprehend services not have a resource arn. This permission is retricted to the lambda function responsible for accessing the Amazon Comprehend service",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "comprehend:DescribeTopicsDetectionJob",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TestTopicOrchestrationLambdaDescribeJobPolicy08843BA7",
        "Roles": Array [
          Object {
            "Ref": "TestTopicOrchestrationCheckStatusLambdaFunctionServiceRoleFC3D008E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TestTopicOrchestrationLambdaEventBusPolicy03772C08": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "events:PutEvents",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "EventBus7B8748AA",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TestTopicOrchestrationLambdaEventBusPolicy03772C08",
        "Roles": Array [
          Object {
            "Ref": "TestTopicOrchestrationPublishTopicLambdaFunctionServiceRole3B2D8594",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TestTopicOrchestrationLambdaSubmitJobPolicy86E8696F": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "The * resource allows lambda function to access Amazon Comprehend services for Topic Detection. The Comprehend services not have a resource arn. This permission is retricted to the lambda function responsible for accessing the Amazon Comprehend service",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "comprehend:StartTopicsDetectionJob",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TestTopicOrchestrationLambdaSubmitJobPolicy86E8696F",
        "Roles": Array [
          Object {
            "Ref": "TestTopicOrchestrationSubmitTopicLambdaFunctionServiceRole9B98F733",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TestTopicOrchestrationPublishTopicLambdaFunction132EE22B": Object {
      "DependsOn": Array [
        "TestTopicOrchestrationPublishTopicLambdaFunctionServiceRoleDefaultPolicy6260509B",
        "TestTopicOrchestrationPublishTopicLambdaFunctionServiceRole3B2D8594",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with more tighter permissions.",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters0cd9790ade1b33fbe8d8fd63cf9be9a740a0ca1e81a5d11012dc5185e9127777S3BucketFCAE4F5C",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters0cd9790ade1b33fbe8d8fd63cf9be9a740a0ca1e81a5d11012dc5185e9127777S3VersionKey6718B76C",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters0cd9790ade1b33fbe8d8fd63cf9be9a740a0ca1e81a5d11012dc5185e9127777S3VersionKey6718B76C",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "EVENT_BUS_NAME": Object {
              "Ref": "EventBus7B8748AA",
            },
            "RAW_DATA_FEED": Object {
              "Ref": "RawBucket0C3EE094",
            },
            "TOPICS_EVENT_NAMESPACE": "com.test.topic",
            "TOPIC_MAPPINGS_EVENT_NAMESPACE": "com.test.mappings",
          },
        },
        "Handler": "lambda_function.handler",
        "MemorySize": 256,
        "Role": Object {
          "Fn::GetAtt": Array [
            "TestTopicOrchestrationPublishTopicLambdaFunctionServiceRole3B2D8594",
            "Arn",
          ],
        },
        "Runtime": "python3.8",
        "Timeout": 600,
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "TestTopicOrchestrationPublishTopicLambdaFunctionServiceRole3B2D8594": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "TestTopicOrchestrationPublishTopicLambdaFunctionServiceRoleDefaultPolicy6260509B": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray.",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "TestTopicOrchestrationTopicInferenceS3Bucket54AC0D6B",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "TestTopicOrchestrationTopicInferenceS3Bucket54AC0D6B",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "RawBucket0C3EE094",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "RawBucket0C3EE094",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TestTopicOrchestrationPublishTopicLambdaFunctionServiceRoleDefaultPolicy6260509B",
        "Roles": Array [
          Object {
            "Ref": "TestTopicOrchestrationPublishTopicLambdaFunctionServiceRole3B2D8594",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TestTopicOrchestrationSubmitTopicLambdaFunctionAF8CDE7C": Object {
      "DependsOn": Array [
        "TestTopicOrchestrationSubmitTopicLambdaFunctionServiceRoleDefaultPolicyF32FE4DE",
        "TestTopicOrchestrationSubmitTopicLambdaFunctionServiceRole9B98F733",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with more tighter permissions.",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters831f82455cd501f84fa0552882fa0c00d4fc97d6146a09225d34b1a297da11d2S3Bucket88FA777B",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters831f82455cd501f84fa0552882fa0c00d4fc97d6146a09225d34b1a297da11d2S3VersionKeyB1F903A3",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters831f82455cd501f84fa0552882fa0c00d4fc97d6146a09225d34b1a297da11d2S3VersionKeyB1F903A3",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATA_ACCESS_ARN": Object {
              "Fn::GetAtt": Array [
                "TestTopicOrchestrationTopicAnalysisRoleA05A37B7",
                "Arn",
              ],
            },
            "INFERENCE_BUCKET": Object {
              "Ref": "TestTopicOrchestrationTopicInferenceS3Bucket54AC0D6B",
            },
            "INGESTION_S3_BUCKET_NAME": Object {
              "Ref": "TestTopicOrchestrationTopicIngestionS3Bucket953D8D57",
            },
            "INGESTION_WINDOW": "2",
            "NUMBER_OF_TOPICS": "10",
            "RAW_BUCKET_FEED": Object {
              "Ref": "RawBucket0C3EE094",
            },
            "S3_BUCKET_NAME": Object {
              "Ref": "TestTopicOrchestrationTopicInferenceS3Bucket54AC0D6B",
            },
            "STACK_NAME": Object {
              "Ref": "AWS::StackName",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "TestTopicOrchestrationSubmitTopicLambdaFunctionServiceRole9B98F733",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 300,
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "TestTopicOrchestrationSubmitTopicLambdaFunctionServiceRole9B98F733": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "TestTopicOrchestrationSubmitTopicLambdaFunctionServiceRoleDefaultPolicyF32FE4DE": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray.",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "TestTopicOrchestrationTopicIngestionS3Bucket953D8D57",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "TestTopicOrchestrationTopicIngestionS3Bucket953D8D57",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "TestTopicOrchestrationTopicInferenceS3Bucket54AC0D6B",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "TestTopicOrchestrationTopicInferenceS3Bucket54AC0D6B",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "RawBucket0C3EE094",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "RawBucket0C3EE094",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TestTopicOrchestrationSubmitTopicLambdaFunctionServiceRoleDefaultPolicyF32FE4DE",
        "Roles": Array [
          Object {
            "Ref": "TestTopicOrchestrationSubmitTopicLambdaFunctionServiceRole9B98F733",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TestTopicOrchestrationTopicAnalysisRoleA05A37B7": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "comprehend.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "TestTopicOrchestrationTopicAnalysisRoleDefaultPolicy7273C9AF": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "TestTopicOrchestrationTopicIngestionS3Bucket953D8D57",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "TestTopicOrchestrationTopicIngestionS3Bucket953D8D57",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "TestTopicOrchestrationTopicInferenceS3Bucket54AC0D6B",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "TestTopicOrchestrationTopicInferenceS3Bucket54AC0D6B",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TestTopicOrchestrationTopicAnalysisRoleDefaultPolicy7273C9AF",
        "Roles": Array [
          Object {
            "Ref": "TestTopicOrchestrationTopicAnalysisRoleA05A37B7",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TestTopicOrchestrationTopicInferenceS3Bucket54AC0D6B": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "LoggingConfiguration": Object {
          "DestinationBucketName": Object {
            "Ref": "AccessLogD598EBE9",
          },
          "LogFilePrefix": "TestTopicOrchestration-TopicInference/",
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "TestTopicOrchestrationTopicInferenceS3BucketPolicy4F7D4594": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "TestTopicOrchestrationTopicInferenceS3Bucket54AC0D6B",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": "*",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "TestTopicOrchestrationTopicInferenceS3Bucket54AC0D6B",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
              "Sid": "HttpsOnly",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "TestTopicOrchestrationTopicIngestionS3Bucket953D8D57": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "LoggingConfiguration": Object {
          "DestinationBucketName": Object {
            "Ref": "AccessLogD598EBE9",
          },
          "LogFilePrefix": "TestTopicOrchestration-TopicIngestion/",
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "TestTopicOrchestrationTopicIngestionS3BucketPolicy4681CCF5": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "TestTopicOrchestrationTopicIngestionS3Bucket953D8D57",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": "*",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "TestTopicOrchestrationTopicIngestionS3Bucket953D8D57",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
              "Sid": "HttpsOnly",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "TestTopicOrchestrationTopicModelWFStateMachineLogPolicyA30F4823": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "The stepfunction log policy requires that resources be \\"*\\"",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogDelivery",
                "logs:GetLogDelivery",
                "logs:UpdateLogDelivery",
                "logs:DeleteLogDelivery",
                "logs:ListLogDeliveries",
                "logs:PutResourcePolicy",
                "logs:DescribeResourcePolicies",
                "logs:DescribeLogGroups",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TestTopicOrchestrationTopicModelWFStateMachineLogPolicyA30F4823",
        "Roles": Array [
          Object {
            "Ref": "TestTopicOrchestrationTopicModelWFStateMachineRole30F829E0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TestTopicOrchestrationTopicModelWFStateMachineRole30F829E0": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "states.",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ".amazonaws.com",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "TestTopicOrchestrationTopicModelWFWorkflowEngineD9D94961": Object {
      "DependsOn": Array [
        "TestTopicOrchestrationTopicModelWFWorkflowEngineRoleDefaultPolicy2B38430E",
        "TestTopicOrchestrationTopicModelWFWorkflowEngineRoleC78D5F5C",
      ],
      "Properties": Object {
        "DefinitionString": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"StartAt\\":\\"Submit\\",\\"States\\":{\\"Submit\\":{\\"Next\\":\\"Wait\\",\\"OutputPath\\":\\"$\\",\\"Type\\":\\"Task\\",\\"Resource\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "TestTopicOrchestrationSubmitTopicLambdaFunctionAF8CDE7C",
                  "Arn",
                ],
              },
              "\\"},\\"Wait\\":{\\"Type\\":\\"Wait\\",\\"Seconds\\":600,\\"Next\\":\\"Check Status\\"},\\"JobComplete?\\":{\\"Type\\":\\"Choice\\",\\"Comment\\":\\"Check if the topic modeling job is complete\\",\\"InputPath\\":\\"$\\",\\"Choices\\":[{\\"Variable\\":\\"$.JobStatus\\",\\"StringEquals\\":\\"COMPLETED\\",\\"Next\\":\\"Publish Topic\\"},{\\"Variable\\":\\"$.JobStatus\\",\\"StringEquals\\":\\"IN_PROGRESS\\",\\"Next\\":\\"Wait\\"},{\\"Variable\\":\\"$.JobStatus\\",\\"StringEquals\\":\\"SUBMITTED\\",\\"Next\\":\\"Wait\\"}],\\"Default\\":\\"JobFailed\\"},\\"Check Status\\":{\\"Next\\":\\"JobComplete?\\",\\"InputPath\\":\\"$\\",\\"OutputPath\\":\\"$.TopicsDetectionJobProperties\\",\\"Type\\":\\"Task\\",\\"Resource\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "TestTopicOrchestrationCheckStatusLambdaFunctionA7FE15A7",
                  "Arn",
                ],
              },
              "\\"},\\"JobFailed\\":{\\"Type\\":\\"Fail\\"},\\"Publish Topic\\":{\\"End\\":true,\\"OutputPath\\":\\"$\\",\\"Type\\":\\"Task\\",\\"Resource\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "TestTopicOrchestrationPublishTopicLambdaFunction132EE22B",
                  "Arn",
                ],
              },
              "\\"}}}",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "TestTopicOrchestrationTopicModelWFWorkflowEngineRoleC78D5F5C",
            "Arn",
          ],
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "TestTopicOrchestrationTopicModelWFWorkflowEngineEventsRole086D2595": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "TestTopicOrchestrationTopicModelWFWorkflowEngineEventsRoleDefaultPolicyFF7DB817": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "TestTopicOrchestrationTopicModelWFWorkflowEngineD9D94961",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TestTopicOrchestrationTopicModelWFWorkflowEngineEventsRoleDefaultPolicyFF7DB817",
        "Roles": Array [
          Object {
            "Ref": "TestTopicOrchestrationTopicModelWFWorkflowEngineEventsRole086D2595",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TestTopicOrchestrationTopicModelWFWorkflowEngineRoleC78D5F5C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "states.",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ".amazonaws.com",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "TestTopicOrchestrationTopicModelWFWorkflowEngineRoleDefaultPolicy2B38430E": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "TestTopicOrchestrationSubmitTopicLambdaFunctionAF8CDE7C",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "TestTopicOrchestrationCheckStatusLambdaFunctionA7FE15A7",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "TestTopicOrchestrationPublishTopicLambdaFunction132EE22B",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TestTopicOrchestrationTopicModelWFWorkflowEngineRoleDefaultPolicy2B38430E",
        "Roles": Array [
          Object {
            "Ref": "TestTopicOrchestrationTopicModelWFWorkflowEngineRoleC78D5F5C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TestTopicOrchestrationTopicModelWFstatemachineloggroupD4DD9F04": Object {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "TestTopicOrchestrationTopicModelWFstatemachineloggroupstatemachinelogstreamE4DD3079": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "LogGroupName": Object {
          "Ref": "TestTopicOrchestrationTopicModelWFstatemachineloggroupD4DD9F04",
        },
      },
      "Type": "AWS::Logs::LogStream",
      "UpdateReplacePolicy": "Retain",
    },
    "TestTopicOrchestrationTopicSchedule5DE8B730": Object {
      "Properties": Object {
        "ScheduleExpression": "(5 */2 * * ? *)",
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Ref": "TestTopicOrchestrationTopicModelWFWorkflowEngineD9D94961",
            },
            "Id": "Target0",
            "RoleArn": Object {
              "Fn::GetAtt": Array [
                "TestTopicOrchestrationTopicModelWFWorkflowEngineEventsRole086D2595",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
  },
}
`;
