// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`test workflow stack 1`] = `
Object {
  "Parameters": Object {
    "AssetParameters53b3d6bd9b1a6c0426d2d61d72b98e21f39d8fd769ba87b10b62e1ee17910529ArtifactHash27C67F5C": Object {
      "Description": "Artifact hash for asset \\"53b3d6bd9b1a6c0426d2d61d72b98e21f39d8fd769ba87b10b62e1ee17910529\\"",
      "Type": "String",
    },
    "AssetParameters53b3d6bd9b1a6c0426d2d61d72b98e21f39d8fd769ba87b10b62e1ee17910529S3BucketC579C769": Object {
      "Description": "S3 bucket for asset \\"53b3d6bd9b1a6c0426d2d61d72b98e21f39d8fd769ba87b10b62e1ee17910529\\"",
      "Type": "String",
    },
    "AssetParameters53b3d6bd9b1a6c0426d2d61d72b98e21f39d8fd769ba87b10b62e1ee17910529S3VersionKey7C229637": Object {
      "Description": "S3 key for asset version \\"53b3d6bd9b1a6c0426d2d61d72b98e21f39d8fd769ba87b10b62e1ee17910529\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "AccessLogD598EBE9": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AccessControl": "LogDeliveryWrite",
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "GlueCloudWatch69956C56": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "EnableKeyRotation": true,
        "KeyPolicy": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kms:Create*",
                "kms:Describe*",
                "kms:Enable*",
                "kms:List*",
                "kms:Put*",
                "kms:Update*",
                "kms:Revoke*",
                "kms:Disable*",
                "kms:Get*",
                "kms:Delete*",
                "kms:ScheduleKeyDeletion",
                "kms:CancelKeyDeletion",
                "kms:GenerateDataKey",
                "kms:TagResource",
                "kms:UntagResource",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "logs.",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ".amazonaws.com",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "TestBucket560B80BC": Object {
      "DeletionPolicy": "Retain",
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "TestDBEntityTable4DC8B26D": Object {
      "Properties": Object {
        "CatalogId": Object {
          "Ref": "AWS::AccountId",
        },
        "DatabaseName": Object {
          "Ref": "TestDBTweetDBAFCEF20F",
        },
        "TableInput": Object {
          "Description": "entity generated by CDK",
          "Name": "entity",
          "Parameters": Object {
            "classification": "parquet",
            "has_encrypted_data": false,
          },
          "PartitionKeys": Array [
            Object {
              "Name": "created_at",
              "Type": "timestamp",
            },
          ],
          "StorageDescriptor": Object {
            "Columns": Array [
              Object {
                "Name": "account_name",
                "Type": "string",
              },
              Object {
                "Name": "platform",
                "Type": "string",
              },
              Object {
                "Name": "search_query",
                "Type": "string",
              },
              Object {
                "Name": "id_str",
                "Type": "string",
              },
              Object {
                "Name": "text",
                "Type": "string",
              },
              Object {
                "Name": "translated_text",
                "Type": "string",
              },
              Object {
                "Name": "entity_text",
                "Type": "string",
              },
              Object {
                "Name": "entity_type",
                "Type": "string",
              },
              Object {
                "Name": "entity_score",
                "Type": "double",
              },
              Object {
                "Name": "entity_begin_offset",
                "Type": "int",
              },
              Object {
                "Name": "entity_end_offset",
                "Type": "int",
              },
            ],
            "Compressed": false,
            "InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
            "Location": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "s3://",
                  Object {
                    "Ref": "TestBucket560B80BC",
                  },
                  "/entity/",
                ],
              ],
            },
            "OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
            "SerdeInfo": Object {
              "SerializationLibrary": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe",
            },
            "StoredAsSubDirectories": true,
          },
          "TableType": "EXTERNAL_TABLE",
        },
      },
      "Type": "AWS::Glue::Table",
    },
    "TestDBGlueSecConfig0DDD9B15": Object {
      "Properties": Object {
        "EncryptionConfiguration": Object {
          "CloudWatchEncryption": Object {
            "CloudWatchEncryptionMode": "SSE-KMS",
            "KmsKeyArn": Object {
              "Fn::GetAtt": Array [
                "GlueCloudWatch69956C56",
                "Arn",
              ],
            },
          },
          "S3Encryptions": Array [
            Object {
              "S3EncryptionMode": "SSE-S3",
            },
          ],
        },
        "Name": "socialmediadb-sec-config",
      },
      "Type": "AWS::Glue::SecurityConfiguration",
    },
    "TestDBHotTopicsDBCustomResource25466B42": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "TestDBHotTopicsDBLambdaFunction06F2B747",
            "Arn",
          ],
        },
      },
      "Type": "Custom::CreatePartition",
      "UpdateReplacePolicy": "Delete",
    },
    "TestDBHotTopicsDBLambdaFunction06F2B747": Object {
      "DependsOn": Array [
        "TestDBHotTopicsDBLambdaFunctionServiceRoleDefaultPolicyDBF96BAD",
        "TestDBHotTopicsDBLambdaFunctionServiceRole6D366CAF",
        "TestDBHotTopicsDBLambdaGlue19D3D9B1",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with more tighter permissions.",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters53b3d6bd9b1a6c0426d2d61d72b98e21f39d8fd769ba87b10b62e1ee17910529S3BucketC579C769",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters53b3d6bd9b1a6c0426d2d61d72b98e21f39d8fd769ba87b10b62e1ee17910529S3VersionKey7C229637",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters53b3d6bd9b1a6c0426d2d61d72b98e21f39d8fd769ba87b10b62e1ee17910529S3VersionKey7C229637",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Description": "Lambda function to create parition on glue tables",
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATABASE_NAME": Object {
              "Ref": "TestDBTweetDBAFCEF20F",
            },
            "TABLE_NAMES": "sentiment,entity,keyphrase,topics,topic-mappings,txtinimgentity,txtinimgsentiment,txtinimgkeyphrase,moderationlabels",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "TestDBHotTopicsDBLambdaFunctionServiceRole6D366CAF",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Timeout": 300,
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "TestDBHotTopicsDBLambdaFunctionLambdaInvokePermission3FCCE8FD": Object {
      "DependsOn": Array [
        "TestDBHotTopicsDBLambdaGlue19D3D9B1",
      ],
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "TestDBHotTopicsDBLambdaFunction06F2B747",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "TestDBHotTopicsDBNightlyCreateParitionEventsRule5A6F3369",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "TestDBHotTopicsDBLambdaFunctionServiceRole6D366CAF": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "TestDBHotTopicsDBLambdaFunctionServiceRoleDefaultPolicyDBF96BAD": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray.",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "TestBucket560B80BC",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "TestBucket560B80BC",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TestDBHotTopicsDBLambdaFunctionServiceRoleDefaultPolicyDBF96BAD",
        "Roles": Array [
          Object {
            "Ref": "TestDBHotTopicsDBLambdaFunctionServiceRole6D366CAF",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TestDBHotTopicsDBLambdaGlue19D3D9B1": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "glue:GetPartition",
                "glue:GetTable",
                "glue:CreatePartition",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":table/",
                      Object {
                        "Ref": "TestDBTweetDBAFCEF20F",
                      },
                      "/*",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":database/",
                      Object {
                        "Ref": "TestDBTweetDBAFCEF20F",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":catalog",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "kms:Decrypt",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "GlueCloudWatch69956C56",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":/aws-glue/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "TestDBHotTopicsDBLambdaGlue19D3D9B1",
        "Roles": Array [
          Object {
            "Ref": "TestDBHotTopicsDBLambdaFunctionServiceRole6D366CAF",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TestDBHotTopicsDBNightlyCreateParitionEventsRule5A6F3369": Object {
      "Properties": Object {
        "ScheduleExpression": "cron(1 0 * * ? *)",
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "TestDBHotTopicsDBLambdaFunction06F2B747",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "TestDBKeyPhraseTable22CDC136": Object {
      "Properties": Object {
        "CatalogId": Object {
          "Ref": "AWS::AccountId",
        },
        "DatabaseName": Object {
          "Ref": "TestDBTweetDBAFCEF20F",
        },
        "TableInput": Object {
          "Description": "keyphrase generated by CDK",
          "Name": "keyphrase",
          "Parameters": Object {
            "classification": "parquet",
            "has_encrypted_data": false,
          },
          "PartitionKeys": Array [
            Object {
              "Name": "created_at",
              "Type": "timestamp",
            },
          ],
          "StorageDescriptor": Object {
            "Columns": Array [
              Object {
                "Name": "account_name",
                "Type": "string",
              },
              Object {
                "Name": "platform",
                "Type": "string",
              },
              Object {
                "Name": "search_query",
                "Type": "string",
              },
              Object {
                "Name": "id_str",
                "Type": "string",
              },
              Object {
                "Name": "text",
                "Type": "string",
              },
              Object {
                "Name": "translated_text",
                "Type": "string",
              },
              Object {
                "Name": "phrase",
                "Type": "string",
              },
              Object {
                "Name": "phrase_score",
                "Type": "double",
              },
              Object {
                "Name": "phrase_begin_offset",
                "Type": "int",
              },
              Object {
                "Name": "phrase_end_offset",
                "Type": "int",
              },
            ],
            "Compressed": false,
            "InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
            "Location": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "s3://",
                  Object {
                    "Ref": "TestBucket560B80BC",
                  },
                  "/keyphrase/",
                ],
              ],
            },
            "OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
            "SerdeInfo": Object {
              "SerializationLibrary": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe",
            },
            "StoredAsSubDirectories": true,
          },
          "TableType": "EXTERNAL_TABLE",
        },
      },
      "Type": "AWS::Glue::Table",
    },
    "TestDBModerationLabelsTable30B5D54D": Object {
      "Properties": Object {
        "CatalogId": Object {
          "Ref": "AWS::AccountId",
        },
        "DatabaseName": Object {
          "Ref": "TestDBTweetDBAFCEF20F",
        },
        "TableInput": Object {
          "Description": "moderationlabels generated by CDK",
          "Name": "moderationlabels",
          "Parameters": Object {
            "classification": "parquet",
            "has_encrypted_data": false,
          },
          "PartitionKeys": Array [
            Object {
              "Name": "created_at",
              "Type": "timestamp",
            },
          ],
          "StorageDescriptor": Object {
            "Columns": Array [
              Object {
                "Name": "account_name",
                "Type": "string",
              },
              Object {
                "Name": "platform",
                "Type": "string",
              },
              Object {
                "Name": "search_query",
                "Type": "string",
              },
              Object {
                "Name": "id_str",
                "Type": "string",
              },
              Object {
                "Name": "image_url",
                "Type": "string",
              },
              Object {
                "Name": "label_name",
                "Type": "string",
              },
              Object {
                "Name": "confidence",
                "Type": "double",
              },
            ],
            "Compressed": false,
            "InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
            "Location": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "s3://",
                  Object {
                    "Ref": "TestBucket560B80BC",
                  },
                  "/moderationlabels/",
                ],
              ],
            },
            "OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
            "SerdeInfo": Object {
              "SerializationLibrary": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe",
            },
            "StoredAsSubDirectories": true,
          },
          "TableType": "EXTERNAL_TABLE",
        },
      },
      "Type": "AWS::Glue::Table",
    },
    "TestDBSentimentTableEBBAA891": Object {
      "Properties": Object {
        "CatalogId": Object {
          "Ref": "AWS::AccountId",
        },
        "DatabaseName": Object {
          "Ref": "TestDBTweetDBAFCEF20F",
        },
        "TableInput": Object {
          "Description": "sentiment generated by CDK",
          "Name": "sentiment",
          "Parameters": Object {
            "classification": "parquet",
            "has_encrypted_data": false,
          },
          "PartitionKeys": Array [
            Object {
              "Name": "created_at",
              "Type": "timestamp",
            },
          ],
          "StorageDescriptor": Object {
            "Columns": Array [
              Object {
                "Name": "account_name",
                "Type": "string",
              },
              Object {
                "Name": "platform",
                "Type": "string",
              },
              Object {
                "Name": "search_query",
                "Type": "string",
              },
              Object {
                "Name": "id_str",
                "Type": "string",
              },
              Object {
                "Name": "text",
                "Type": "string",
              },
              Object {
                "Name": "translated_text",
                "Type": "string",
              },
              Object {
                "Name": "sentiment",
                "Type": "string",
              },
              Object {
                "Name": "sentimentposscore",
                "Type": "double",
              },
              Object {
                "Name": "sentimentnegscore",
                "Type": "double",
              },
              Object {
                "Name": "sentimentneuscore",
                "Type": "double",
              },
              Object {
                "Name": "sentimentmixscore",
                "Type": "double",
              },
            ],
            "Compressed": false,
            "InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
            "Location": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "s3://",
                  Object {
                    "Ref": "TestBucket560B80BC",
                  },
                  "/sentiment/",
                ],
              ],
            },
            "OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
            "SerdeInfo": Object {
              "SerializationLibrary": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe",
            },
            "StoredAsSubDirectories": true,
          },
          "TableType": "EXTERNAL_TABLE",
        },
      },
      "Type": "AWS::Glue::Table",
    },
    "TestDBTopicMappingsTopicsTable184F8511": Object {
      "Properties": Object {
        "CatalogId": Object {
          "Ref": "AWS::AccountId",
        },
        "DatabaseName": Object {
          "Ref": "TestDBTweetDBAFCEF20F",
        },
        "TableInput": Object {
          "Description": "topic-mappings generated by CDK",
          "Name": "topic-mappings",
          "Parameters": Object {
            "classification": "parquet",
            "has_encrypted_data": false,
          },
          "PartitionKeys": Array [
            Object {
              "Name": "created_at",
              "Type": "timestamp",
            },
          ],
          "StorageDescriptor": Object {
            "Columns": Array [
              Object {
                "Name": "job_id",
                "Type": "string",
              },
              Object {
                "Name": "job_timestamp",
                "Type": "timestamp",
              },
              Object {
                "Name": "topic",
                "Type": "string",
              },
              Object {
                "Name": "id_str",
                "Type": "string",
              },
            ],
            "Compressed": false,
            "InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
            "Location": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "s3://",
                  Object {
                    "Ref": "TestBucket560B80BC",
                  },
                  "/topic-mappings/",
                ],
              ],
            },
            "OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
            "SerdeInfo": Object {
              "SerializationLibrary": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe",
            },
            "StoredAsSubDirectories": true,
          },
          "TableType": "EXTERNAL_TABLE",
        },
      },
      "Type": "AWS::Glue::Table",
    },
    "TestDBTopicsTable8087CEDA": Object {
      "Properties": Object {
        "CatalogId": Object {
          "Ref": "AWS::AccountId",
        },
        "DatabaseName": Object {
          "Ref": "TestDBTweetDBAFCEF20F",
        },
        "TableInput": Object {
          "Description": "topics generated by CDK",
          "Name": "topics",
          "Parameters": Object {
            "classification": "parquet",
            "has_encrypted_data": false,
          },
          "PartitionKeys": Array [
            Object {
              "Name": "created_at",
              "Type": "timestamp",
            },
          ],
          "StorageDescriptor": Object {
            "Columns": Array [
              Object {
                "Name": "job_id",
                "Type": "string",
              },
              Object {
                "Name": "job_timestamp",
                "Type": "timestamp",
              },
              Object {
                "Name": "term",
                "Type": "string",
              },
              Object {
                "Name": "weight",
                "Type": "double",
              },
              Object {
                "Name": "topic",
                "Type": "string",
              },
            ],
            "Compressed": false,
            "InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
            "Location": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "s3://",
                  Object {
                    "Ref": "TestBucket560B80BC",
                  },
                  "/topics/",
                ],
              ],
            },
            "OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
            "SerdeInfo": Object {
              "SerializationLibrary": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe",
            },
            "StoredAsSubDirectories": true,
          },
          "TableType": "EXTERNAL_TABLE",
        },
      },
      "Type": "AWS::Glue::Table",
    },
    "TestDBTweetDBAFCEF20F": Object {
      "Properties": Object {
        "CatalogId": Object {
          "Ref": "AWS::AccountId",
        },
        "DatabaseInput": Object {
          "Name": "socialmediadb",
        },
      },
      "Type": "AWS::Glue::Database",
    },
    "TestDBTweetDBEncryption98A3A837": Object {
      "Properties": Object {
        "CatalogId": Object {
          "Ref": "AWS::AccountId",
        },
        "DataCatalogEncryptionSettings": Object {
          "EncryptionAtRest": Object {
            "CatalogEncryptionMode": "SSE-KMS",
          },
        },
      },
      "Type": "AWS::Glue::DataCatalogEncryptionSettings",
    },
    "TestDBTxtInImgEntityImgTxtEntityTableA67792FB": Object {
      "Properties": Object {
        "CatalogId": Object {
          "Ref": "AWS::AccountId",
        },
        "DatabaseName": Object {
          "Ref": "TestDBTweetDBAFCEF20F",
        },
        "TableInput": Object {
          "Description": "txtinimgentity generated by CDK",
          "Name": "txtinimgentity",
          "Parameters": Object {
            "classification": "parquet",
            "has_encrypted_data": false,
          },
          "PartitionKeys": Array [
            Object {
              "Name": "created_at",
              "Type": "timestamp",
            },
          ],
          "StorageDescriptor": Object {
            "Columns": Array [
              Object {
                "Name": "account_name",
                "Type": "string",
              },
              Object {
                "Name": "platform",
                "Type": "string",
              },
              Object {
                "Name": "search_query",
                "Type": "string",
              },
              Object {
                "Name": "id_str",
                "Type": "string",
              },
              Object {
                "Name": "text",
                "Type": "string",
              },
              Object {
                "Name": "entity_text",
                "Type": "string",
              },
              Object {
                "Name": "entity_type",
                "Type": "string",
              },
              Object {
                "Name": "entity_score",
                "Type": "double",
              },
              Object {
                "Name": "entity_begin_offset",
                "Type": "int",
              },
              Object {
                "Name": "entity_end_offset",
                "Type": "int",
              },
              Object {
                "Name": "image_url",
                "Type": "string",
              },
            ],
            "Compressed": false,
            "InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
            "Location": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "s3://",
                  Object {
                    "Ref": "TestBucket560B80BC",
                  },
                  "/txtinimgentity/",
                ],
              ],
            },
            "OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
            "SerdeInfo": Object {
              "SerializationLibrary": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe",
            },
            "StoredAsSubDirectories": true,
          },
          "TableType": "EXTERNAL_TABLE",
        },
      },
      "Type": "AWS::Glue::Table",
    },
    "TestDBTxtInImgKeyPhraseImgTxtKeyPhraseTable1BD0A14B": Object {
      "Properties": Object {
        "CatalogId": Object {
          "Ref": "AWS::AccountId",
        },
        "DatabaseName": Object {
          "Ref": "TestDBTweetDBAFCEF20F",
        },
        "TableInput": Object {
          "Description": "txtinimgkeyphrase generated by CDK",
          "Name": "txtinimgkeyphrase",
          "Parameters": Object {
            "classification": "parquet",
            "has_encrypted_data": false,
          },
          "PartitionKeys": Array [
            Object {
              "Name": "created_at",
              "Type": "timestamp",
            },
          ],
          "StorageDescriptor": Object {
            "Columns": Array [
              Object {
                "Name": "account_name",
                "Type": "string",
              },
              Object {
                "Name": "platform",
                "Type": "string",
              },
              Object {
                "Name": "search_query",
                "Type": "string",
              },
              Object {
                "Name": "id_str",
                "Type": "string",
              },
              Object {
                "Name": "text",
                "Type": "string",
              },
              Object {
                "Name": "phrase",
                "Type": "string",
              },
              Object {
                "Name": "phrase_score",
                "Type": "double",
              },
              Object {
                "Name": "phrase_begin_offset",
                "Type": "int",
              },
              Object {
                "Name": "phrase_end_offset",
                "Type": "int",
              },
              Object {
                "Name": "image_url",
                "Type": "string",
              },
            ],
            "Compressed": false,
            "InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
            "Location": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "s3://",
                  Object {
                    "Ref": "TestBucket560B80BC",
                  },
                  "/txtinimgkeyphrase/",
                ],
              ],
            },
            "OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
            "SerdeInfo": Object {
              "SerializationLibrary": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe",
            },
            "StoredAsSubDirectories": true,
          },
          "TableType": "EXTERNAL_TABLE",
        },
      },
      "Type": "AWS::Glue::Table",
    },
    "TestDBTxtInImgSentimentImgTxtSentimentTable1F146A93": Object {
      "Properties": Object {
        "CatalogId": Object {
          "Ref": "AWS::AccountId",
        },
        "DatabaseName": Object {
          "Ref": "TestDBTweetDBAFCEF20F",
        },
        "TableInput": Object {
          "Description": "txtinimgsentiment generated by CDK",
          "Name": "txtinimgsentiment",
          "Parameters": Object {
            "classification": "parquet",
            "has_encrypted_data": false,
          },
          "PartitionKeys": Array [
            Object {
              "Name": "created_at",
              "Type": "timestamp",
            },
          ],
          "StorageDescriptor": Object {
            "Columns": Array [
              Object {
                "Name": "account_name",
                "Type": "string",
              },
              Object {
                "Name": "platform",
                "Type": "string",
              },
              Object {
                "Name": "search_query",
                "Type": "string",
              },
              Object {
                "Name": "id_str",
                "Type": "string",
              },
              Object {
                "Name": "text",
                "Type": "string",
              },
              Object {
                "Name": "sentiment",
                "Type": "string",
              },
              Object {
                "Name": "sentimentposscore",
                "Type": "double",
              },
              Object {
                "Name": "sentimentnegscore",
                "Type": "double",
              },
              Object {
                "Name": "sentimentneuscore",
                "Type": "double",
              },
              Object {
                "Name": "sentimentmixscore",
                "Type": "double",
              },
              Object {
                "Name": "image_url",
                "Type": "string",
              },
            ],
            "Compressed": false,
            "InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
            "Location": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "s3://",
                  Object {
                    "Ref": "TestBucket560B80BC",
                  },
                  "/txtinimgsentiment/",
                ],
              ],
            },
            "OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
            "SerdeInfo": Object {
              "SerializationLibrary": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe",
            },
            "StoredAsSubDirectories": true,
          },
          "TableType": "EXTERNAL_TABLE",
        },
      },
      "Type": "AWS::Glue::Table",
    },
  },
}
`;
